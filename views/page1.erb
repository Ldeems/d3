howdy
<style>
        .bar {
            fill: steelblue;
        }
    </style>
<script src="https://d3js.org/d3.v4.min.js"></script>


<body>
<svg width="600" height="500"></svg>
<script>

    var svg = d3.select("svg"),// selects the svg element
        margin = 200,
        width = svg.attr("width") - margin,//sets the width
        height = svg.attr("height") - margin;//sets the hieght


    var xScale = d3.scaleBand().range ([0, width]).padding(0.4),//creates x axis
        yScale = d3.scaleLinear().range ([height, 0]);//creats y axis

    var g = svg.append("g")
               .attr("transform", "translate(" + 100 + "," + 100 + ")");//adds a group element to our svg

    d3.csv("XYZ.csv", function(error, data) {//loads the csv using the d3.csv method
        if (error) {
            throw error;
        }

        xScale.domain(data.map(function(d) { return d.year; }));//domain value for x axis
        yScale.domain([0, d3.max(data, function(d) { return d.value; })]);// domain value for y axis, uses max to set the max lol

        g.append("g")
         .attr("transform", "translate(0," + height + ")")
         .call(d3.axisBottom(xScale));// another group element to the x axis and sets them to the botom of the x axis

        g.append("g")
         .call(d3.axisLeft(yScale).tickFormat(function(d){
             return "$" + d;// adds money symbol to the numbers on y axis
         }).ticks(10));// adds the ticks to the line


        g.selectAll(".bar")//adds the class bar to the rectangle element
         .data(data)
         .enter().append("rect")
         .attr("class", "bar")
         .attr("x", function(d) { return xScale(d.year); })// x scale created earlier and pass the year value from our data
         .attr("y", function(d) { return yScale(d.value); })//pass the data value to our y scale and receive the corresponding y value from the y range
         .attr("width", xScale.bandwidth())//x-scale returns a calculated bandwidth from the range and padding provided to the x-scale
         .attr("height", function(d) { return height - yScale(d.value); });//height of the SVG minus the corresponding y-value of the bar from the y-scale
    });

</script>
</body>
